name: Java CI with Gradle

# 동작 조건 설정 : main 브랜치에 push가 발생할 경우 동작한다.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Spring Boot 애플리케이션을 빌드하여 도커허브에 푸시하는 과정
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # 1. Java 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3-1. Gradle 권한 부여
      - name: Grant permission for gradlew
        run: chmod +x ./gradlew

      # 3-2. Spring Boot 애플리케이션 빌드
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 4. Docker 이미지 빌드
      - name: docker image build
        run: docker build -t jokubattle2/moonduck .

      # 5. DockerHub 로그인
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: jokubattle2
          password: joku12345

      # 6. Docker Hub 이미지 푸시
      - name: docker Hub push
        run: docker push jokubattle2/moonduck

  deploy:
    # build-docker-image (위)과정이 완료되어야 실행됩니다.
    needs: build-docker-image
    runs-on: ubuntu-latest

    steps:
      # NCP 로그인
      - name: NCP login and docker image pull and run
        uses: appleboy/ssh-action@master
        with:
          host: 34.64.148.95
          username: admin
          password: jokubattle12
          port: 5432
          script: |
            echo "joku1234" | sudo docker login -u jokubattle2 --password-stdin
            
            # 컨테이너가 존재할 때만 컨테이너 제거 작업 수행
            POSTGRES_CONTAINER_NAME="jokubattle2"
            
            CONTAINERS=$(sudo docker ps -aq | grep -v $(sudo docker ps -aqf "name=$POSTGRES_CONTAINER_NAME") | grep -v $(sudo docker ps -aqf "name=$REDIS_CONTAINER_NAME"))
            if [ -n "$CONTAINERS" ]; then
              sudo docker stop $CONTAINERS
              sudo docker rm -f $CONTAINERS
            fi
            
            sudo docker pull jokubattle2/moonduck
            sudo docker run --network moonduck -d -p 8080:8081 jokubattle2/moonduck
            sudo docker image prune -f
            ps -ef | grep docker